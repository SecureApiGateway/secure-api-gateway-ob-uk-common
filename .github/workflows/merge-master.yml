name: merge-master

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Check Master Integrity
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Set up java environment
        uses: actions/setup-java@v1
        with: # running setup-java
          java-version: "17" # LTS version
          architecture: x64

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven2-${{ hashFiles('**/pom.xml') }}

      - name: Get version
        run: |
          echo "VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )" >> $GITHUB_ENV
          echo "Version is $VERSION"
        id: get_version

      - name: Set up snapshot forgerock maven repository
        if: contains( env.VERSION, 'SNAPSHOT')
        uses: actions/setup-java@v1
        with: # running setup-java and overwrites the settings.xml
          java-version: "17" # LTS version
          architecture: x64
          server-id: maven.forgerock.org-community-snapshots # Value of the distributionManagement/repository/id field of the pom.xml
          server-username: MAVEN_REPO_USERNAME # env variable for username in deploy
          server-password: MAVEN_REPO_TOKEN # env variable for token in deploy

      - name: Check integrity # build the project
        run: mvn -B clean verify --file pom.xml # this command executes each default lifecycle phase in order (validate, compile, test, package, etc), before executing verify.

      - name: Release snapshot package to forgerock maven snapshot repository
        if: contains(env.VERSION, 'SNAPSHOT')
        run: mvn -B deploy --file pom.xml # skip test and license check, It has been done in the Check integrity step
        env:
          MAVEN_REPO_USERNAME: ${{ secrets.FR_ARTIFACTORY_USER }}
          MAVEN_REPO_TOKEN: ${{ secrets.FR_ARTIFACTORY_TOKEN }}

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_ACCESS_TOKEN }}
